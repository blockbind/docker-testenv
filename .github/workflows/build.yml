name: Build and publish test environment

on:
  workflow_dispatch: { }
  repository_dispatch:
    types: [ blockbind ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          repository: blockbind/docker-testenv
          token: ${{ secrets.GH_TOKEN }}
          submodules: true
      - name: Set up JDK 16
        uses: actions/setup-java@v1
        with:
          java-version: 16
      - name: Spigot Buildtools 1.16.5
        run: |
          mkdir buildtools && cd buildtools
          wget "https://hub.spigotmc.org/jenkins/job/BuildTools/lastSuccessfulBuild/artifact/target/BuildTools.jar"
          java -jar BuildTools.jar --rev 1.16.5
          cd Bukkit && mvn clean install && cd ..
          cd Spigot && mvn clean install && cd ..
          cd CraftBukkit && mvn clean install && cd ..
          cd ..
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Spigot Buildtools 1.18
        run: |
          cd buildtools
          java -jar BuildTools.jar --rev 1.18
          cd Bukkit && mvn clean install && cd ..
          cd Spigot && mvn clean install && cd ..
          cd CraftBukkit && mvn clean install && cd ..
          cd .. && rm -rf buildtools
      - name: Build project
        run: |
          git submodule update --remote --merge
          echo $PWD
          cd blockbind
          echo $PWD
          ls
          mvn package
      - name: Prepare artifact
        run: |
          mkdir artifact
          cp target/*.jar artifact/
          cp -r include/* artifact/
          zip -r testenv.zip artifact/*
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: artifact/
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: false
          title: "${GITHUB_SHA}"
          files: |
            testenv.zip
            docker-compose.yml